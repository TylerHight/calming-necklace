======== Exception caught by widgets library =======================================================
The following ProviderNotFoundException was thrown building BlocBuilder<NecklacesBloc, NecklacesState>(bloc: null, has builder, dirty, dependencies: [_InheritedProviderScope<NecklacesBloc?>], state: _BlocBuilderBaseState<NecklacesBloc, NecklacesState>#cbd3f):
Error: Could not find the correct Provider<BleState> above this BlocBuilder<NecklacesBloc, NecklacesState> Widget

This happens because you used a `BuildContext` that does not include the provider
of your choice. There are a few common scenarios:

- You added a new provider in your `main.dart` and performed a hot-reload.
  To fix, perform a hot-restart.

- The provider you are trying to read is in a different route.

  Providers are "scoped". So if you insert of provider inside a route, then
  other routes will not be able to access that provider.

- You used a `BuildContext` that is an ancestor of the provider you are trying to read.

  Make sure that BlocBuilder<NecklacesBloc, NecklacesState> is under your MultiProvider/Provider<BleState>.
  This usually happens when you are creating a provider and trying to read it immediately.

  For example, instead of:

  ```
  Widget build(BuildContext context) {
    return Provider<Example>(
      create: (_) => Example(),
      // Will throw a ProviderNotFoundError, because `context` is associated
      // to the widget that is the parent of `Provider<Example>`
      child: Text(context.watch<Example>().toString()),
    );
  }
  ```

  consider using `builder` like so:

  ```
  Widget build(BuildContext context) {
    return Provider<Example>(
      create: (_) => Example(),
      // we use `builder` to obtain a new `BuildContext` that has access to the provider
      builder: (context, child) {
        // No longer throws
        return Text(context.watch<Example>().toString());
      }
    );
  }
  ```

If none of these solutions work, consider asking for help on StackOverflow:
https://stackoverflow.com/questions/tagged/flutter

The relevant error-causing widget was:
  BlocBuilder<NecklacesBloc, NecklacesState> BlocBuilder:file:///C:/Users/hight/StudioProjects/calming_necklace/lib/features/necklaces_screen/presentation/necklaces_screen.dart:113:13
When the exception was thrown, this was the stack:
#0      Provider._inheritedElementOf (package:provider/src/provider.dart:343:7)
#1      Provider.of (package:provider/src/provider.dart:293:30)
#2      ReadContext.read (package:provider/src/provider.dart:649:21)
#3      _NecklacesScreenState.build.<anonymous closure> (package:calming_necklace/features/necklaces_screen/presentation/necklaces_screen.dart:120:63)
#4      BlocBuilder.build (package:flutter_bloc/src/bloc_builder.dart:91:57)
#5      _BlocBuilderBaseState.build (package:flutter_bloc/src/bloc_builder.dart:188:21)
#6      StatefulElement.build (package:flutter/src/widgets/framework.dart:5743:27)
#7      ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:5631:15)
#8      StatefulElement.performRebuild (package:flutter/src/widgets/framework.dart:5794:11)
#9      Element.rebuild (package:flutter/src/widgets/framework.dart:5347:7)
#10     BuildScope._tryRebuild (package:flutter/src/widgets/framework.dart:2694:15)
#11     BuildScope._flushDirtyElements (package:flutter/src/widgets/framework.dart:2753:11)
#12     BuildOwner.buildScope (package:flutter/src/widgets/framework.dart:3048:18)
#13     WidgetsBinding.drawFrame (package:flutter/src/widgets/binding.dart:1176:21)
#14     RendererBinding._handlePersistentFrameCallback (package:flutter/src/rendering/binding.dart:475:5)
#15     SchedulerBinding._invokeFrameCallback (package:flutter/src/scheduler/binding.dart:1397:15)
#16     SchedulerBinding.handleDrawFrame (package:flutter/src/scheduler/binding.dart:1318:9)
#17     SchedulerBinding._handleDrawFrame (package:flutter/src/scheduler/binding.dart:1176:5)
#18     _invoke (dart:ui/hooks.dart:312:13)
#19     PlatformDispatcher._drawFrame (dart:ui/platform_dispatcher.dart:427:5)
#20     _drawFrame (dart:ui/hooks.dart:283:31)
====================================================================================================

======== Exception caught by widgets library =======================================================
The following ProviderNotFoundException was thrown building BlocBuilder<NecklacesBloc, NecklacesState>(bloc: null, has builder, dirty, dependencies: [_InheritedProviderScope<NecklacesBloc?>], state: _BlocBuilderBaseState<NecklacesBloc, NecklacesState>#cbd3f):
Error: Could not find the correct Provider<BleState> above this BlocBuilder<NecklacesBloc, NecklacesState> Widget

This happens because you used a `BuildContext` that does not include the provider
of your choice. There are a few common scenarios:

- You added a new provider in your `main.dart` and performed a hot-reload.
  To fix, perform a hot-restart.

- The provider you are trying to read is in a different route.

  Providers are "scoped". So if you insert of provider inside a route, then
  other routes will not be able to access that provider.

- You used a `BuildContext` that is an ancestor of the provider you are trying to read.

  Make sure that BlocBuilder<NecklacesBloc, NecklacesState> is under your MultiProvider/Provider<BleState>.
  This usually happens when you are creating a provider and trying to read it immediately.

  For example, instead of:

  ```
  Widget build(BuildContext context) {
    return Provider<Example>(
      create: (_) => Example(),
      // Will throw a ProviderNotFoundError, because `context` is associated
      // to the widget that is the parent of `Provider<Example>`
      child: Text(context.watch<Example>().toString()),
    );
  }
  ```

  consider using `builder` like so:

  ```
  Widget build(BuildContext context) {
    return Provider<Example>(
      create: (_) => Example(),
      // we use `builder` to obtain a new `BuildContext` that has access to the provider
      builder: (context, child) {
        // No longer throws
        return Text(context.watch<Example>().toString());
      }
    );
  }
  ```

If none of these solutions work, consider asking for help on StackOverflow:
https://stackoverflow.com/questions/tagged/flutter