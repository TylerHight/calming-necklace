I/flutter (27805): 17:36:42 🔍 [timed_toggle_button] 🔍 Building TimedToggleButton: isLightOn: true, timeLeft: 7s
I/flutter (27805): 17:36:42 🔍 [app_bloc_observer] 🔍 Event: UpdateEmissionDuration(0:00:20.000000)
I/flutter (27805): 17:36:42 🔍 [settings_screen] 🔍 Duration changed: 0:00:20.000000
I/flutter (27805): 17:36:42 🔍 [settings_bloc] 🔍 Updating emission duration: 0:00:20.000000
I/flutter (27805): 17:36:42 🔍 [database_service] 🔍 BleDevice data not present or in unexpected format
I/flutter (27805): *** WARNING ***
I/flutter (27805): 
I/flutter (27805): Invalid argument false with type bool.
I/flutter (27805): Only num, String and Uint8List are supported. See https://github.com/tekartik/sqflite/blob/master/sqflite/doc/supported_types.md for details
I/flutter (27805): 
I/flutter (27805): This will throw an exception in the future. For now it is displayed once per type.
I/flutter (27805): 
I/flutter (27805):     
I/flutter (27805): #0      _checkArg (package:sqflite_common/src/value_utils.dart:30:7)
I/flutter (27805): #1      checkNonNullValue (package:sqflite_common/src/value_utils.dart:51:5)
I/flutter (27805): #2      new SqlBuilder.update (package:sqflite_common/src/sql_builder.dart:235:9)
I/flutter (27805): #3      SqfliteDatabaseExecutorMixin.update (package:sqflite_common/src/database_mixin.dart:206:32)
I/flutter (27805): #4      DatabaseService.updateNecklaceSettings (package:calming_necklace/core/services/database_service.dart:345:16)
I/flutter (27805): <asynchronous suspension>
I/flutter (27805): #5      SettingsBloc._onUpdateEmissionDuration (package:calming_necklace/features/device_settings_screen/blocs/settings/settings_bloc.dart:80:7)
I/flutter (27805): <asynchronous suspension>
I/flutter (27805): #6      Bloc.on.<anonymous closure>.handleEvent (package:bloc/src/bloc.dart:229:13)
I/flutter (27805): <asynchronous suspension>
I/flutter (27805): 17:36:42 🔍 [app_bloc_observer] 🔍 Transition: Transition { currentState: SettingsState(Necklace(2025-03-01 16:37:22.005657, tggggg, BleDevice(id: D4:25:CB:B4:D0:52, name: Calming Necklace, address: D4:25:CB:B4:D0:52, rssi: -49, type: BleDeviceType.necklace), null, false, 0:00:26.000000, 0:00:16.000000, false, false, false, true, false, 2025-03-01 17:36:23.305574, false, 120, 60), false, false, false, null), event: UpdateEmissionDuration(0:00:20.000000), nextState: SettingsState(Necklace(2025-03-01 16:37:22.005657, tggggg, BleDevice(id: D4:25:CB:B4:D0:52, name: Calming Necklace, address: D4:25:CB:B4:D0:52, rssi: -49, type: BleDeviceType.necklace), null, false, 0:00:20.000000, 0:00:16.000000, false, false, false, true, false, 2025-03-01 17:36:23.305574, false, 120, 60), false, false, false, null) }
I/flutter (27805): 17:36:42 🔍 [app_bloc_observer] 🔍 Change: Change { currentState: SettingsState(Necklace(2025-03-01 16:37:22.005657, tggggg, BleDevice(id: D4:25:CB:B4:D0:52, name: Calming Necklace, address: D4:25:CB:B4:D0:52, rssi: -49, type: BleDeviceType.necklace), null, false, 0:00:26.000000, 0:00:16.000000, false, false, false, true, false, 2025-03-01 17:36:23.305574, false, 120, 60), false, false, false, null), nextState: SettingsState(Necklace(2025-03-01 16:37:22.005657, tggggg, BleDevice(id: D4:25:CB:B4:D0:52, name: Calming Necklace, address: D4:25:CB:B4:D0:52, rssi: -49, type: BleDeviceType.necklace), null, false, 0:00:20.000000, 0:00:16.000000, false, false, false, true, false, 2025-03-01 17:36:23.305574, false, 120, 60), false, false, false, null) }
I/flutter (27805): 17:36:42 🔍 [app_bloc_observer] 🔍 Event: FetchNecklacesEvent()